(function(d, t) {
    var v = d.createElement(t), s = d.getElementsByTagName(t)[0];
    v.onload = function() {
      // Define the FileUpload extension
      const FileUploadExtension = {
        name: 'FileUpload',
        type: 'response',
        match: ({ trace }) =>
          trace.type === 'ext_fileUpload' || trace.payload?.name === 'ext_fileUpload',
        render: ({ trace, element }) => {
          const fileUploadContainer = document.createElement('div')
          fileUploadContainer.innerHTML = `
            <style>
              .my-file-upload {
                border: 2px dashed rgba(46, 110, 225, 0.3);
                padding: 20px;
                text-align: center;
                cursor: pointer;
              }
            </style>
            <div class='my-file-upload'>Drag and drop a file here or click to upload</div>
            <input type='file' style='display: none;'>
          `
          const fileInput = fileUploadContainer.querySelector('input[type=file]')
          const fileUploadBox = fileUploadContainer.querySelector('.my-file-upload')
          fileUploadBox.addEventListener('click', function () {
            fileInput.click()
          })
          fileInput.addEventListener('change', function () {
            const file = fileInput.files[0]
            console.log('File selected:', file)
            fileUploadContainer.innerHTML = `<img src="https://s3.amazonaws.com/com.voiceflow.studio/share/upload/upload.gif" alt="Upload" width="50" height="50">`
            var data = new FormData()
            data.append('file', file)
            fetch('https://tmpfiles.org/api/v1/upload', {
              method: 'POST',
              body: data,
            })
              .then((response) => {
                if (response.ok) {
                  return response.json()
                } else {
                  throw new Error('Upload failed: ' + response.statusText)
                }
              })
              .then((result) => {
                fileUploadContainer.innerHTML =
                  '<img src="https://s3.amazonaws.com/com.voiceflow.studio/share/check/check.gif" alt="Done" width="50" height="50">'
                console.log('File uploaded:', result.data.url)
                window.voiceflow.chat.interact({
                  type: 'complete',
                  payload: {
                    file: result.data.url.replace(
                      'https://tmpfiles.org/',
                      'https://tmpfiles.org/dl/'
                    ),
                  },
                })
              })
              .catch((error) => {
                console.error(error)
                fileUploadContainer.innerHTML = '<div>Error during upload</div>'
              })
          })
          element.appendChild(fileUploadContainer)
        },
      }
      
      // Load Voiceflow chat with the extension
      window.voiceflow.chat.load({
        verify: { projectID: '686df5a49878c43b131f00e6' },
        url: 'https://general-runtime.voiceflow.com',
        versionID: 'production',
        voice: {
          url: "https://runtime-api.voiceflow.com"
        },
        extensions: [FileUploadExtension]
      });
    }
    v.src = "https://cdn.voiceflow.com/widget-next/bundle.mjs"; 
    v.type = "text/javascript"; 
    s.parentNode.insertBefore(v, s);
})(document, 'script');